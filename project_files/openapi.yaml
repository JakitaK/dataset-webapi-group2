openapi: 3.0.3
info:
  title: Dataset Web API (Beta Sprint)
  version: 0.1.0
  description: |
    Documentation for the routes that are currently implemented.
    This beta is read-only. Responses reflect the API's actual shape.

servers:
  - url: https://movie-api-group2-20e70498bde4.herokuapp.com
    description: Production (Heroku)
  - url: https://dataset-webapi-group2-1.onrender.com
    description: Production (Render)
  - url: http://localhost:3000
    description: Local development

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key
      description: API key for authentication

security:
  - ApiKeyAuth: []

paths:
  /api/hello:
    get:
      tags: [System]
      summary: Sanity / health check
      security: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Hello from Group 2 ðŸ‘‹

  /api/v1/moviebyyear:
    get:
      tags: [Movies]
      summary: List movies released in a given year
      security:
        - ApiKeyAuth: []
      parameters:
        - in: query
          name: year
          required: true
          schema:
            type: integer
            example: 2023
          description: 4-digit release year to filter by
      responses:
        "200":
          description: Movies for the given year (array may be empty when no matches)
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        movie_id:
                          type: integer
                          example: 13046
                        title:
                          type: string
                          example: "2001 Maniacs"
                        release_year:
                          type: integer
                          example: 2005
                        runtime_minutes:
                          type: integer
                          example: 87
                        rating:
                          type: string
                          example: "7.5"        # API returns string
                        box_office:
                          type: string
                          example: "0.00"       # API returns string
                        director_id:
                          type: integer
                          example: 1
                        country_id:
                          type: integer
                          example: 1
                  total:
                    type: integer
                    example: 298
                    description: Total number of movies returned
        "400":
          description: Bad Request - invalid year parameter
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid year"
                  details:
                    type: string
                    example: "year query parameter must be an integer"

  /api/v1/movies/mpa/{rating}:
    get:
      tags: [Movies]
      summary: Filter movies by MPA rating
      description: Get movies filtered by Motion Picture Association rating (G, PG, PG-13, R, NC-17, etc.)
      security:
        - ApiKeyAuth: []
      parameters:
        - in: path
          name: rating
          required: true
          schema:
            type: string
            enum: [G, PG, PG-13, R, NC-17, NR, Unrated]
          description: MPA rating to filter by
          example: "PG-13"
        - in: query
          name: limit
          required: false
          schema:
            type: integer
            default: 10
            minimum: 1
            maximum: 100
          description: Number of movies to return per page
        - in: query
          name: offset
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
          description: Number of movies to skip
      responses:
        "200":
          description: Successfully retrieved movies with specified MPA rating
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Retrieved 15 movies with MPA rating PG-13"
                  data:
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            movie_id:
                              type: integer
                            title:
                              type: string
                            mpa_rating:
                              type: string
                              example: "PG-13"
                            release_year:
                              type: integer
                            genres:
                              type: string
                              example: "Action; Adventure"
                      pagination:
                        type: object
                        properties:
                          limit:
                            type: integer
                          offset:
                            type: integer  
                          totalCount:
                            type: integer
                          hasNext:
                            type: boolean
                          hasPrevious:
                            type: boolean
                      mpaRating:
                        type: string
                        example: "PG-13"
        "400":
          description: Bad Request - invalid MPA rating
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Bad Request"
                  details:
                    type: string
                    example: 'Invalid MPA rating "XXX". Valid ratings are: G, PG, PG-13, R, NC-17, NR, Unrated'

externalDocs:
  description: Live API (Heroku Production)
  url: https://movie-api-group2-20e70498bde4.herokuapp.com
